[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "python-challenge"
dynamic = ["version"]
description = ""
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
  { name = "Marciel Sousa", email = "4456790+marcielmj@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.optional-dependencies]
test = [
  "coverage[toml]==7.4.4",
  "pytest==8.1.1"
]
types = [
  "mypy==1.9.0"
]

[project.urls]
Documentation = "https://github.com/marcielmj/python-challenge#readme"
Issues = "https://github.com/marcielmj/python-challenge/issues"
Source = "https://github.com/marcielmj/python-challenge"

[tool.hatch.version]
path = "src/python_challenge/__init__.py"

[tool.hatch.envs.default]
python = "3.12"
features = [
  "test",
  "types"
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]
check = "mypy --install-types --non-interactive {args:src/python_challenge tests}"

[[tool.hatch.envs.all.matrix]]
python = ["3.11", "3.12"]

[tool.coverage.run]
source_pkgs = ["python_challenge", "tests"]
branch = true
parallel = true
omit = []

[tool.coverage.paths]
python_challenge = ["src/python_challenge", "*/python-challenge/src/python_challenge"]
tests = ["tests", "*/python-challenge/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
